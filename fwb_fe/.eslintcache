[{"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\index.js":"1","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\reportWebVitals.js":"2","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\App.js":"3","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\authentication\\login.js":"4","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\home\\homepage.js":"5","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\utils\\cookie.js":"6","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\header\\header.js":"7","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\sidebar\\sider.js":"8","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\feed\\feedpage.js":"9","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\feedItem\\feedItem.js":"10","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\createFeed\\createFeed.js":"11","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\chat\\chat.js":"12","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\recentChat\\recentChat.js":"13"},{"size":472,"mtime":1610339700626,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1609925712631,"results":"16","hashOfConfig":"15"},{"size":337,"mtime":1610501871264,"results":"17","hashOfConfig":"15"},{"size":8134,"mtime":1610438395293,"results":"18","hashOfConfig":"15"},{"size":676,"mtime":1610437608066,"results":"19","hashOfConfig":"15"},{"size":185,"mtime":1610345735372,"results":"20","hashOfConfig":"15"},{"size":968,"mtime":1610438838798,"results":"21","hashOfConfig":"15"},{"size":3444,"mtime":1610439103082,"results":"22","hashOfConfig":"15"},{"size":1245,"mtime":1610447438542,"results":"23","hashOfConfig":"15"},{"size":2491,"mtime":1610445162621,"results":"24","hashOfConfig":"15"},{"size":1612,"mtime":1610445095205,"results":"25","hashOfConfig":"15"},{"size":1016,"mtime":1610502638017,"results":"26","hashOfConfig":"15"},{"size":431,"mtime":1610502769705,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16oae7h",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\index.js",[],["59","60"],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\reportWebVitals.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\App.js",["61","62","63"],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\authentication\\login.js",["64"],"import React, { Fragment, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  PageHeader,\r\n  Tabs,\r\n  Tooltip,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport \"./responsive.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setCookie } from \"../../utils/cookie\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ButtonSignIn = styled.button`\r\n  display: inline-block;\r\n  color: white;\r\n  background-color: #ff2e68;\r\n  font-size: 1em;\r\n  padding: 1%;\r\n  border: 2px solid #ff4081;\r\n  border-radius: 32px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonSignUp = styled.button`\r\n  display: inline-block;\r\n  color: white;\r\n  background-color: #ff2e68;\r\n  font-size: 1em;\r\n  padding: 1%;\r\n  border: 2px solid #ff4081;\r\n  border-radius: 32px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\nconst ButtonSignInWithGG = styled.button`\r\n  display: inline-block;\r\n  color: black;\r\n  font-size: 1em;\r\n  padding: 1%;\r\n  border: 2px solid #ff4081;\r\n  border-radius: 32px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\nconst config = {\r\n  rules: [\r\n    {\r\n      type: \"object\",\r\n      required: true,\r\n      message: \"Please date of birth\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst requireRadio = {\r\n  rules: [\r\n    {\r\n      required: true,\r\n    },\r\n  ],\r\n};\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const [emailLogin, setEmailLogin] = useState(\"\");\r\n  const [passwordLogin, setPasswordLogin] = useState(\"\");\r\n\r\n  const [usernameRegister, setusernameRegister] = useState(\"\");\r\n  const [emailRegister, setEmailRegister] = useState(\"\");\r\n  const [genderRegister, setGenderRegister] = useState(\"\");\r\n  const [birthRegister, setbirthRegister] = useState(\"\");\r\n  const [passwordRegister, setPasswordRegister] = useState(\"\");\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleAge = (date, dateString) => {\r\n    const birth = new Date(dateString);\r\n    var ageDifMs = Date.now() - birth.getTime();\r\n    var ageDate = new Date(ageDifMs);\r\n    // const age = now - birth;\r\n\r\n    setbirthRegister(Math.abs(ageDate.getUTCFullYear() - 1970));\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    fetch(\"http://localhost:5000/auth/login\", {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify({\r\n        email: emailLogin,\r\n        password: passwordLogin,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCookie(\"jwt\", data, { path: \"/\" });\r\n      });\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    fetch(\"http://localhost:5000/auth/register\", {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify({\r\n        username: usernameRegister,\r\n        age: birthRegister,\r\n        gender: genderRegister,\r\n        email: emailRegister,\r\n        password: passwordRegister,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCookie(\"jwt\", data, { path: \"/\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        onBack={() => null}\r\n        title=\"FWB\"\r\n      />\r\n\r\n      <Tabs centered className=\"form\">\r\n        <TabPane tab=\"Sign In\" key=\"1\" className=\"form__text--signin\">\r\n          <Form\r\n            style={{ marginRight: \"20%\", marginLeft: \"20%\" }}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              onChange={(e) => setEmailLogin(e.target.value)}\r\n              value={emailLogin}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your username or email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Username or email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              onChange={(e) => setPasswordLogin(e.target.value)}\r\n              value={passwordLogin}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <ButtonSignIn\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={handleLogin}\r\n              >\r\n                Sign In\r\n              </ButtonSignIn>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <ButtonSignInWithGG type=\"primary\">\r\n                Sign In With Google\r\n              </ButtonSignInWithGG>\r\n            </Form.Item>\r\n\r\n            <Tooltip>\r\n              <a href=\"/filter\">Forgot Password?</a>\r\n            </Tooltip>\r\n          </Form>\r\n        </TabPane>\r\n        <TabPane tab=\"Sign Up\" key=\"3\" className=\"form__text--signup\">\r\n          <Form\r\n            style={{ marginRight: \"20%\", marginLeft: \"20%\" }}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              onChange={(e) => setusernameRegister(e.target.value)}\r\n              value={usernameRegister}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your username!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              onChange={(e) => setEmailRegister(e.target.value)}\r\n              value={emailRegister}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              onChange={(e) => setPasswordRegister(e.target.value)}\r\n              value={passwordRegister}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm_password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your confirm password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Confirm password\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"date-picker\" label=\"Date of Birth\" {...config}>\r\n              <DatePicker\r\n                onChange={(date, dateString) => handleAge(date, dateString)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Gender\"\r\n              {...requireRadio}\r\n              onChange={(e) => setGenderRegister(e.target.value)}\r\n            >\r\n              <Radio.Group>\r\n                <Radio value={1}>Male</Radio>\r\n                <Radio value={2}>Female</Radio>\r\n                <Radio value={3}>Other</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <ButtonSignUp type=\"primary\" onClick={handleRegister}>\r\n                Sign Up\r\n              </ButtonSignUp>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\home\\homepage.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\utils\\cookie.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\header\\header.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\sidebar\\sider.js",["65"],"import React, { Fragment, useState } from \"react\";\r\nimport { Layout, Image } from \"antd\";\r\nimport \"./sider.css\";\r\nimport { Menu, Row, Col, Avatar } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  AppstoreFilled,\r\n  LoadingOutlined,\r\n  EyeFilled,\r\n  LikeFilled,\r\n  StarFilled,\r\n  HeartFilled,\r\n  MessageFilled,\r\n  EllipsisOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nconst ButtonPayment = styled.button`\r\n  display: inline-block;\r\n  color: white;\r\n  background-color: #ff2e68;\r\n  font-size: 1em;\r\n  margin: 3%;\r\n  padding: 6%;\r\n  border: 2px solid #ff4081;\r\n  border-radius: 32px;\r\n  width: 94%;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Sidebar() {\r\n  const [color, setColor] = useState(\"black\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <Layout>\r\n        <Sider>\r\n          <Menu\r\n            defaultSelectedKeys={[\"1\"]}\r\n            defaultOpenKeys={[\"sub1\"]}\r\n            // onMouseUp={ChangeColorText}\r\n            mode=\"inline\"\r\n            style={{\r\n              color: color,\r\n              width: \"360px\",\r\n              height: \"100vh\",\r\n              overflow: \"auto\",\r\n              overflowX: \"hidden\",\r\n              fontSize: \"17px\",\r\n            }}\r\n          >\r\n            <Menu.Item>\r\n              <Row>\r\n                <Image\r\n                  style={{ width: \"150px\", marginLeft: \"50%\" }}\r\n                  src=\"https://howzuapp.com/web/static/media/logo-c-64.60b36bd1.png\"\r\n                />\r\n              </Row>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Row>\r\n                <Col span={6}>\r\n                  <Avatar\r\n                    style={{ backgroundColor: color, verticalAlign: \"middle\" }}\r\n                    size=\"medium\"\r\n                  ></Avatar>\r\n                </Col>\r\n                <Col span={12}>Sơn Đặng Cao</Col>\r\n              </Row>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"1\" icon={<LoadingOutlined />}>\r\n              People near you\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<SearchOutlined />}>\r\n              Find new people\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<EyeFilled />}>\r\n              Visitors\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" icon={<MessageFilled />}>\r\n              Message\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" icon={<HeartFilled />}>\r\n              Feeds\r\n            </Menu.Item>\r\n            <Menu.Item key=\"6\" icon={<HeartFilled />}>\r\n              Matches\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\" icon={<StarFilled />}>\r\n              Super Likes\r\n            </Menu.Item>\r\n            <Menu.Item key=\"8\" icon={<LikeFilled />}>\r\n              Likes\r\n            </Menu.Item>\r\n            <Menu.Item key=\"9\" icon={<EllipsisOutlined />}>\r\n              Help\r\n            </Menu.Item>\r\n            <SubMenu\r\n              style={{ fontSize: \"17px\" }}\r\n              key=\"sub1\"\r\n              icon={<AppstoreFilled />}\r\n              title=\"Multi Language\"\r\n            >\r\n              <Menu.Item key=\"10\">English</Menu.Item>\r\n              <Menu.Item key=\"11\">Vietnam</Menu.Item>\r\n              <Menu.Item key=\"12\">China</Menu.Item>\r\n            </SubMenu>\r\n            <ButtonPayment>Become a Premium Member</ButtonPayment>\r\n          </Menu>\r\n        </Sider>\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\feed\\feedpage.js",["66","67"],"import React, { Fragment, useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Row, Col } from \"antd\";\r\nimport Sidebar from \"../../common/sidebar/sider\";\r\nimport \"./feedPage.css\";\r\nimport FeedItem from \"../../common/feedItem/feedItem\";\r\nimport CreateFeed from \"../../common/createFeed/createFeed\";\r\n\r\nfunction FeedPage() {\r\n  const [feeds, setFeeds] = useState([{}]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col span={5}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col span={12}>\r\n          <div className=\"feedPage\">\r\n            <h1>Feeds</h1>\r\n\r\n            <div className=\"feedPage__container\">\r\n              <CreateFeed />\r\n              {feeds.length === 0 ? (\r\n                <div className=\"feedPage--noFeeds\">\r\n                  <img src=\"https://howzuapp.com/web/static/media/no-visiters-premium.3898f035.png\" />\r\n                </div>\r\n              ) : (\r\n                <div className=\"feedPage--content\">\r\n                  <FeedItem />\r\n                  <FeedItem />\r\n                  <FeedItem />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col span={7}></Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FeedPage;\r\n","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\feedItem\\feedItem.js",["68"],"import React, { Fragment } from \"react\";\r\nimport \"./feedItem.css\";\r\nimport { Avatar, Image, Typography } from \"antd\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { MoreOutlined, LikeOutlined, CommentOutlined } from \"@ant-design/icons\";\r\n\r\nconst dropdownMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">Edit post</Menu.Item>\r\n    <Menu.Item key=\"1\">Delete Post</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction FeedItem() {\r\n  return (\r\n    <div className=\"feedItem\">\r\n      <div className=\"feedItem__header\">\r\n        <div className=\"feedItem__header--infor\">\r\n          <Avatar src=\"\" />\r\n          <div className=\"feedItem__header--inforText\">\r\n            <p>\r\n              <span>Nguyen Khac lam</span> just created a post\r\n            </p>\r\n            <small>5 hours ago</small>\r\n          </div>\r\n        </div>\r\n        <div className=\"feedItem__header--action\">\r\n          <Dropdown\r\n            overlay={dropdownMenu}\r\n            trigger={[\"click\"]}\r\n            placement=\"bottomRight\"\r\n          >\r\n            <MoreOutlined style={{ fontSize: \"32px\" }} />\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n      <div className=\"feedItem__content\">\r\n        <Typography.Paragraph\r\n          ellipsis={{ rows: 2, expandable: true, symbol: \"more\" }}\r\n        >\r\n          I've created a poll to ask all of you what you would like to see more\r\n          in my upcoming videos! It will only take a couple of seconds...thanks\r\n          to all in advance!! Sorry everyone, but from now on, I will only be\r\n          able to edit and upload one design tutorial per month. This happens\r\n          because I'm having a lot on my plate right now and recording and\r\n          editing the tutorials requiere a lot of attention.\r\n        </Typography.Paragraph>\r\n      </div>\r\n      <div className=\"feedItem__image\">\r\n        <Image src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\" />\r\n      </div>\r\n      <div className=\"feedItem__footer\">\r\n        <div className=\"feedItem__footer--infor\">\r\n          <LikeOutlined style={{ fontSize: \"24px\", marginRight: \"0.5rem\" }} />\r\n          <Typography.Text>15 likes</Typography.Text>\r\n        </div>\r\n        <div className=\"feedItem__footer--infor\">\r\n          <CommentOutlined\r\n            style={{ fontSize: \"24px\", marginRight: \"0.5rem\" }}\r\n          />\r\n          <Typography.Text>15 comments</Typography.Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedItem;\r\n","D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\createFeed\\createFeed.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\pages\\chat\\chat.js",[],"D:\\Project\\working\\ProjectIntern_D3\\fwb_fe\\src\\components\\common\\recentChat\\recentChat.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"79","line":72,"column":7,"nodeType":"75","messageId":"76","endLine":72,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":35,"column":17,"nodeType":"75","messageId":"76","endLine":35,"endColumn":25},{"ruleId":"73","severity":1,"message":"81","line":10,"column":17,"nodeType":"75","messageId":"76","endLine":10,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":26,"column":19,"nodeType":"84","endLine":26,"endColumn":103},{"ruleId":"73","severity":1,"message":"85","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","'FeedPage' is defined but never used.","'history' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setFeeds' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]